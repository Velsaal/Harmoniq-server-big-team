{
  "openapi": "3.0.3",
  "info": {
    "version": "1.0.0",
    "title": "Harmoniq API",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of Harmoniq app"
  },
  "servers": [
    {
      "url": "https://harmoniq-server-big-team.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Articles",
      "description": "Operations about articles."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    },
    {
      "name": "Users",
      "description": "Operations about users."
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register user",
        "operationId": "registerUser",
        "description": "Register user with payload",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "description": "User`s name",
                    "type": "string",
                    "example": "Carl Smith"
                  },
                  "email": {
                    "description": "User`s email",
                    "type": "string",
                    "example": "my.mail@mail.com"
                  },
                  "password": {
                    "description": "User`s password",
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a user!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "_id",
                        "name",
                        "email",
                        "avatarUrl",
                        "articlesAmount",
                        "savedArticles",
                        "createdAt",
                        "updatedAt"
                      ],
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "65ca67e7ae7f10c88b598384",
                          "description": "User's id"
                        },
                        "name": {
                          "type": "string",
                          "example": "Carl Smith",
                          "description": "User's name"
                        },
                        "email": {
                          "type": "string",
                          "example": "my.mail@mail.com",
                          "description": "User's email"
                        },
                        "avatarUrl": {
                          "type": "string",
                          "example": "https://example.com/avatar.jpg",
                          "description": "User's avatar URL"
                        },
                        "articlesAmount": {
                          "type": "integer",
                          "example": 0,
                          "description": "Number of articles created by user"
                        },
                        "savedArticles": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "68498236a100312bea078fe7"
                          },
                          "description": "List of saved article IDs"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2025-06-22T17:39:49.416Z",
                          "description": "User creation date"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2025-06-22T17:39:49.416Z",
                          "description": "User last update date"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "$ref": "#/components/responses/409"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login user",
        "operationId": "loginUser",
        "description": "Login user with payload",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User`s email",
                    "type": "string",
                    "example": "my.mail@mail.com"
                  },
                  "password": {
                    "description": "User`s password",
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in an user!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "name",
                        "avatarUrl",
                        "accessToken"
                      ],
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "avatarUrl": {
                          "type": "string"
                        },
                        "accessToken": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout user",
        "operationId": "logoutUser",
        "description": "Logout user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User logged out successfully"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh user session",
        "operationId": "refreshUserSession",
        "description": "Refresh user session and get new access token",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User's session refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed user session!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/articles": {
      "post": {
        "tags": [
          "Articles"
        ],
        "summary": "Create a new article",
        "operationId": "createArticle",
        "description": "Create a new article",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "content"
                ],
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "New article"
                  },
                  "content": {
                    "type": "string",
                    "example": "This is the content of the article."
                  },
                  "img": {
                    "type": "string",
                    "format": "binary"
                  },
                  "desc": {
                    "type": "string",
                    "example": "Short description of the article"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Article created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created an article!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/article"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Get list of articles",
        "operationId": "getArticles",
        "description": "Get list of articles with pagination, sorting and filtering",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination",
            "example": 1
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "default": 12
            },
            "description": "Number of articles per page",
            "example": 12
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "enum": [
                "rate",
                "date",
                "title"
              ],
              "default": "rate"
            },
            "description": "Field by which to sort the articles",
            "example": "rate"
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            },
            "description": "Sorting order",
            "example": "desc"
          },
          {
            "in": "query",
            "name": "ownerId",
            "schema": {
              "type": "string"
            },
            "description": "Filter articles by ownerId"
          }
        ],
        "responses": {
          "200": {
            "description": "List of articles retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found articles!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/article"
                          }
                        },
                        "page": {
                          "type": "integer",
                          "example": 1
                        },
                        "perPage": {
                          "type": "integer",
                          "example": 12
                        },
                        "totalItems": {
                          "type": "integer",
                          "example": 90
                        },
                        "totalPages": {
                          "type": "integer",
                          "example": 9
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/articles/{articleId}": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Get article by id",
        "operationId": "getArticleById",
        "description": "Get article by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "articleId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found article by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found article with id 65ca67e7ae7f10c88b598384!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/article"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "patch": {
        "tags": [
          "Articles"
        ],
        "summary": "Patch article",
        "operationId": "patchArticle",
        "description": "Update the article with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "articleId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "content": {
                    "type": "string"
                  },
                  "img": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully update an article!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched the article!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/article"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "delete": {
        "tags": [
          "Articles"
        ],
        "summary": "Delete article",
        "operationId": "deleteArticle",
        "description": "Delete article with given id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "articleId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Article delete"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users",
        "operationId": "getAllUsers",
        "description": "Get all users",
        "security": [],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination",
            "example": 1
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "default": 20,
              "example": 20
            },
            "description": "Number of users per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found users!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found users!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "users",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage"
                      ],
                      "properties": {
                        "users": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/users"
                          }
                        },
                        "page": {
                          "type": "string",
                          "example": 1
                        },
                        "perPage": {
                          "type": "string",
                          "example": 20
                        },
                        "totalItems": {
                          "type": "string",
                          "example": 50
                        },
                        "totalPages": {
                          "type": "string",
                          "example": 5
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user/author by id",
        "operationId": "getUserById",
        "description": "Get user/author by id",
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "688507eb52768403f159c9c2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found user with id 688507eb52768403f159c9c2!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found user with id 688507eb52768403f159c9c2!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/users"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/users/{userId}/saved-articles": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user's saved articles",
        "operationId": "getSavedArticlesByAuthorId",
        "description": "Get user's saved articles by user ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "688507eb52768403f159c9c2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found user's saved articles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found user's saved articles!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/article"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/users/{userId}/saved-articles/{articleId}": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Patch user's saved article by id",
        "operationId": "saveArticleByAuthorId",
        "description": "Add an article to user's saved articles by user ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "688507eb52768403f159c9c2"
            }
          },
          {
            "in": "path",
            "name": "articleId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Article added to saved!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Article added to saved!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/article"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user's saved article by articleId",
        "operationId": "removeSavedArticleFromSavedList",
        "description": "Delete a saved article from user's saved articles by userId and articleId",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "688507eb52768403f159c9c2"
            }
          },
          {
            "in": "path",
            "name": "articleId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Article removed from saved list"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/users/{userId}/articles": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get own articles",
        "operationId": "getOwnArticlesByAuthorId",
        "description": "Get own articles by user ID",
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "688507eb52768403f159c9c2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found user's own articles with id 688507eb52768403f159c9c2!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found user's own articles with id 688507eb52768403f159c9c2!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/article"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/user/photo": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Add user's avatar photo",
        "operationId": "postUserAvatarPhoto",
        "description": "Upload and add user's avatar photo",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "photo"
                ],
                "properties": {
                  "photo": {
                    "description": "User's avatar photo file",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User avatar photo added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully added user avatar photo!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/users"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "users": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "email",
          "password"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "User's unique ID",
            "example": "64c8d958249fae54bae90bb9"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "minLength": 2,
            "maxLength": 32,
            "example": "alicewow"
          },
          "email": {
            "type": "string",
            "description": "User's email address",
            "format": "email",
            "example": "qwerty123@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "Hashed user password",
            "minLength": 8,
            "maxLength": 64,
            "example": "$2b$10$e0MYzXyjpJS7Pd0RVvHwHe"
          },
          "avatarUrl": {
            "type": "string",
            "description": "URL аватара користувача",
            "example": "https://example.com/avatar.jpg"
          },
          "articlesAmount": {
            "type": "integer",
            "description": "Кількість статей користувача",
            "default": 0,
            "example": 5
          },
          "savedArticles": {
            "type": "array",
            "description": "Масив ID збережених статей користувача",
            "items": {
              "type": "string",
              "example": "68498236a100312bea078fe7"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "article": {
        "type": "object",
        "required": [
          "_id",
          "title",
          "img",
          "desc",
          "rate",
          "ownerId",
          "date"
        ],
        "properties": {
          "_id": {
            "description": "Article's id",
            "type": "string",
            "example": "688385d5fd28844fe82bc4b6"
          },
          "title": {
            "description": "Article's title",
            "type": "string",
            "example": "Some title"
          },
          "img": {
            "description": "Link to article's image",
            "type": "string",
            "example": "https://res.cloudinary.com/dok3yyfgg/image/upload/v1753449944/g2glnvmdpwgyyuxfj6dl.jpg"
          },
          "desc": {
            "description": "Article's description",
            "type": "string",
            "example": "description lorem100"
          },
          "rate": {
            "description": "Article's rate",
            "type": "number",
            "example": 0
          },
          "ownerId": {
            "description": "Id of the user who created the article",
            "type": "string",
            "example": "65e4decdd286b30065d54af8"
          },
          "ownerName": {
            "description": "Name of the user who created the article",
            "type": "string",
            "example": "John Doe"
          },
          "date": {
            "description": "Article's creation date",
            "type": "string",
            "example": "2025-07-25"
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "NotFound error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "NotFoundError"
                },
                "data": {
                  "type": "string",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Article not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Conflict error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "ConflictError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email in use"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "UnauthorizedError": {
        "$ref": "#/components/responses/401"
      },
      "NotFoundError": {
        "$ref": "#/components/responses/404"
      }
    }
  }
}